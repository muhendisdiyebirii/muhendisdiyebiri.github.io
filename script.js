document.addEventListener('DOMContentLoaded', function(    // === ATATÃœRK GIF VE GENÃ‡LÄ°ÄžE HÄ°TABE LOGÄ°ÄžÄ° ===
    const ataturkGif = document.getElementById('ataturkGif');
    const hitabeContainer = document.getElementById('hitabeContainer');
    const gencligeHitabe = document.getElementById('gencligeHitabe');

    const hitabeMetni = `Ey TÃ¼rk GenÃ§liÄŸi! Birinci vazifen, TÃ¼rk istiklÃ¢lini, TÃ¼rk Cumhuriyetini, ilelebet muhafaza ve mÃ¼dafaa etmektir.

Mevcudiyetinin ve istikbalinin yegÃ¢ne temeli budur. Bu temel, senin en kÄ±ymetli hazinendir. Ä°stikbalde dahi, seni bu hazineden mahrum etmek isteyecek dÃ¢hilÃ® ve haricÃ® bedhahlarÄ±n olacaktÄ±r. Bir gÃ¼n, istiklÃ¢l ve Cumhuriyeti mÃ¼dafaa mecburiyetine dÃ¼ÅŸersen, vazifeye atÄ±lmak iÃ§in, iÃ§inde bulunacaÄŸÄ±n vaziyetin imkÃ¢n ve ÅŸerÃ¢itini dÃ¼ÅŸÃ¼nmeyeceksin! Bu imkÃ¢n ve ÅŸerÃ¢it, Ã§ok nÃ¢mÃ¼sait bir mahiyette tezahÃ¼r edebilir. Ä°stiklÃ¢l ve Cumhuriyetine kastedecek dÃ¼ÅŸmanlar, bÃ¼tÃ¼n dÃ¼nyada emsali gÃ¶rÃ¼lmemiÅŸ bir galibiyetin mÃ¼messili olabilirler. Cebren ve hile ile aziz vatanÄ±n bÃ¼tÃ¼n kaleleri zaptedilmiÅŸ, bÃ¼tÃ¼n tersanelerine girilmiÅŸ, bÃ¼tÃ¼n ordularÄ± daÄŸÄ±tÄ±lmÄ±ÅŸ ve memleketin her kÃ¶ÅŸesi bilfiil iÅŸgal edilmiÅŸ olabilir. BÃ¼tÃ¼n bu ÅŸerÃ¢itten daha elim ve daha vahim olmak Ã¼zere, memleketin dÃ¢hilinde iktidara sahip olanlar gaflet ve dalÃ¢let ve hattÃ¢ hÄ±yanet iÃ§inde bulunabilirler. HattÃ¢ bu iktidar sahipleri ÅŸahsÃ® menfaatlerini, mÃ¼stevlilerin siyasÃ® emelleriyle tevhit edebilirler. Millet, fakr Ã¼ zaruret iÃ§inde harap ve bÃ®tap dÃ¼ÅŸmÃ¼ÅŸ olabilir.

Ey TÃ¼rk istikbalinin evlÃ¢dÄ±! Ä°ÅŸte, bu ahval ve ÅŸerÃ¢it iÃ§inde dahi vazifen, TÃ¼rk Ä°stiklÃ¢l ve Cumhuriyetini kurtarmaktÄ±r! MuhtaÃ§ olduÄŸun kudret, damarlarÄ±ndaki asil kanda mevcuttur!
`;

    if (gencligeHitabe) { // gencligeHitabe elementinin varlÄ±ÄŸÄ±nÄ± kontrol et
        gencligeHitabe.textContent = hitabeMetni; // Metni pre etiketine yerleÅŸtir
    }
    
    if (ataturkGif && hitabeContainer) { // Her iki elementin de varlÄ±ÄŸÄ±nÄ± kontrol et
        ataturkGif.addEventListener('click', () => {
            hitabeContainer.classList.toggle('hitabe-visible');
            // GenÃ§liÄŸe Hitabe aÃ§Ä±ldÄ±ÄŸÄ±nda scroll'u en Ã¼ste getir
            if (hitabeContainer.classList.contains('hitabe-visible')) {
                hitabeContainer.scrollTop = 0;
            }
        });

        // Hitabe aÃ§Ä±kken dÄ±ÅŸarÄ± tÄ±klayÄ±nca kapatma
        hitabeContainer.addEventListener('click', (event) => {
            if (event.target === hitabeContainer) { // Sadece kapsayÄ±cÄ±ya tÄ±klanÄ±rsa kapat
                hitabeContainer.classList.remove('hitabe-visible');
            }
        });

        // ESC tuÅŸuna basÄ±ldÄ±ÄŸÄ±nda hitabeyi kapatma
        document.addEventListener('keydown', (event) => {
            if (event.key === 'Escape' && hitabeContainer.classList.contains('hitabe-visible')) {
                hitabeContainer.classList.remove('hitabe-visible');
            }
        });
    }
    // === ATATÃœRK GIF VE GENÃ‡LÄ°ÄžE HÄ°TABE LOGÄ°ÄžÄ° SONU ===) {

    // === SAYFA GEÃ‡Ä°ÅžLERÄ° ===
    const navLinkElements = document.querySelectorAll('.nav-link');
    const sayfalar = document.querySelectorAll('.sayfa');
    navLinkElements.forEach(link => {
        link.addEventListener('click', e => {
            e.preventDefault();
            const targetId = link.getAttribute('data-target');
                sayfalar.forEach(s => s.classList.remove('aktif'));
                document.getElementById(targetId).classList.add('aktif');
// Sayfa geÃ§iÅŸlerinde tÃ¼m modal pencereleri kapat
                modals.forEach(modal => {
            if (modal) {
                modal.style.display = "none";
                }
            });
// GenÃ§liÄŸe Hitabe modalÄ±nÄ± da kapat
if (hitabeContainer) { // hitabeContainer'Ä±n tanÄ±mlÄ± olduÄŸundan emin olalÄ±m
    hitabeContainer.classList.remove('hitabe-visible');
}
        });
    });

    // === MODAL ELEMENTLERÄ° ===
    const projeModal = document.getElementById('proje-modal');
    const demoModal = document.getElementById('demo-modal');
    const modals = [projeModal, demoModal];

    modals.forEach(modal => {
        if (modal) {
            const closeButton = modal.querySelector('.close-button');
            if (closeButton) { // closeButton'Ä±n varlÄ±ÄŸÄ±nÄ± kontrol et
                closeButton.onclick = () => modal.style.display = "none";
            }
        }
    });

    window.onclick = event => {
        modals.forEach(modal => {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        });
    };

    // === AKSÄ°YON BUTONLARI ===
    document.body.addEventListener('click', function(event) {

        // Kodu GÃ¶ster/Gizle
        if (event.target.matches('.btn-goster')) {
            const wrapper = event.target.closest('.kod-blogu-wrapper');
            const kodBlok = wrapper.querySelector('.kod-blogu');
            kodBlok.classList.toggle('acik');
            event.target.textContent = kodBlok.classList.contains('acik') ? 'Kodu Gizle' : 'Kodu GÃ¶ster';
        }

        // Kopyala
        if (event.target.matches('.btn-kopyala')) {
            const wrapper = event.target.closest('.kod-blogu');
            const kod = wrapper.querySelector('code').innerText;
            navigator.clipboard.writeText(kod).then(() => {
                event.target.classList.add('kopyalandi');
                setTimeout(() => event.target.classList.remove('kopyalandi'), 1500);
            });
        }

        // Demo
        if (event.target.matches('.btn-demo')) {
            const kodId = event.target.dataset.id;
            const kodData = tumVeri.kodlar.find(k => k.id === kodId);
            if(kodData) demoyuBaslat(kodData);
        }
    });

    // VERÄ°LERÄ° YÃœKLE
    let tumVeri = {};
    async function verileriYukle() {
        try {
            const response = await fetch('data.json');
            tumVeri = await response.json();

            const projelerListesi = document.getElementById('projeler-listesi');
            projelerListesi.innerHTML = '';
            tumVeri.projeler.forEach(proje => {
                const projeElementi = document.createElement('div');
                projeElementi.className = 'proje-karti';
                projeElementi.dataset.id = proje.id;
                const kapakResmi = proje.resimler?.[0] || 'images/default.png';
                projeElementi.innerHTML = `<img src="${kapakResmi}" alt="${proje.baslik}"><div class="proje-karti-icerik"><h3>${proje.baslik}</h3><p>${proje.aciklama}</p></div>`;
                projeElementi.addEventListener('click', () => detaylariGoster(proje));
                projelerListesi.appendChild(projeElementi);
            });

            const kodlarListesi = document.getElementById('kodlar-listesi');
            kodlarListesi.innerHTML = '';
            tumVeri.kodlar.forEach(kod => {
                const element = document.createElement('div');
                if (kod.tip === 'indir') {
                    element.className = 'indir-karti';
                    element.innerHTML = `<h3>${kod.baslik}</h3><p>${kod.aciklama}</p><a href="${kod.dosyaYolu}" class="btn" download>Ä°ndir</a>`;
                } else {
                    element.className = 'kod-karti';
                    const guvenliKod = kod.kod.replace(/</g, "&lt;").replace(/>/g, "&gt;");
                    let demoButton = kod.demo ? `<button class="btn btn-demo" data-id="${kod.id}">âš¡ Demoyu Dene</button>` : '';
                    element.innerHTML = `
                        <h3>${kod.baslik}</h3>
                        <p>${kod.aciklama}</p>
                        <div class="kod-blogu-wrapper">
                            <div class="kod-actions">
                                <button class="btn btn-goster">Kodu GÃ¶ster</button>
                                ${demoButton}
                            </div>
                            <div class="kod-blogu">
                                <button class="btn btn-kopyala">ðŸ“‹</button>
                                <pre><code>${guvenliKod}</code></pre>
                            </div>
                        </div>
                    `;
                }
                kodlarListesi.appendChild(element);
            });

        } catch (error) { console.error('Veri YÃ¼klenemedi:', error); }
    }

    function detaylariGoster(proje) {
        document.getElementById('modal-title').textContent = proje.baslik;

        const imagesContainer = document.getElementById('modal-images');
        imagesContainer.innerHTML = '';
        proje.resimler.forEach(resimUrl => {
            imagesContainer.innerHTML += `<img src="${resimUrl}" alt="${proje.baslik} resmi">`;
        });

        const materialsContainer = document.getElementById('modal-materials');
        materialsContainer.innerHTML = '';
        proje.malzemeler.forEach(malzeme => {
            materialsContainer.innerHTML += `<li>${malzeme}</li>`;
        });

        const codesContainer = document.getElementById('modal-codes');
        codesContainer.innerHTML = '';
        proje.kodBloklari.forEach(blok => {
            const guvenliKod = blok.kod.replace(/</g, "&lt;").replace(/>/g, "&gt;");
            codesContainer.innerHTML += `
            <div class="kod-blogu-wrapper">
                <h4>${blok.dil}</h4>
                <div class="kod-actions">
                    <button class="btn btn-goster">Kodu GÃ¶ster</button>
                </div>
                <div class="kod-blogu">
                    <button class="btn btn-kopyala">ðŸ“‹</button>
                    <pre><code>${guvenliKod}</code></pre>
                </div>
            </div>`;
        });

        projeModal.style.display = "block";
    }

    // === DEMO BAÅžLATMA ===
    function demoyuBaslat(kodData) {
        const title = document.getElementById('demo-modal-title');
        const content = document.getElementById('demo-modal-content');
        title.textContent = kodData.baslik;
        content.innerHTML = '';

        // JS mantÄ±ÄŸÄ±yla tÃ¼m demo id'leri
        switch(kodData.id) {
            case 'python-sayi-tahmin':
                let sayi = Math.ceil(Math.random() * 100);
                content.innerHTML = `
                    <p>1 ile 100 arasÄ±nda bir sayÄ± tuttum. Hadi tahmin et!</p>
                    <input type="number" id="tahminInput" placeholder="Tahminin...">
                    <button id="tahminButton" class="btn">Tahmin Et</button>
                    <p id="tahminSonuc"></p>
                `;
                document.getElementById('tahminButton').addEventListener('click', () => {
                    const tahmin = parseInt(document.getElementById('tahminInput').value);
                    const sonuc = document.getElementById('tahminSonuc');
                    if (isNaN(tahmin)) {
                        sonuc.textContent = 'LÃ¼tfen geÃ§erli bir sayÄ± girin.';
                        return;
                    }
                    if (tahmin === sayi) {
                        sonuc.innerHTML = `ðŸŽ‰ Tebrikler, doÄŸru tahmin! SayÄ± ${sayi} idi. Yeni oyun iÃ§in pencereyi kapatÄ±p tekrar aÃ§.`;
                    } else if (tahmin > sayi) {
                        sonuc.textContent = 'Daha kÃ¼Ã§Ã¼k bir sayÄ± gir.';
                    } else {
                        sonuc.textContent = 'Daha bÃ¼yÃ¼k bir sayÄ± gir.';
                    }
                });
                break;

            case 'python-tkm':
                content.innerHTML = `
                    <p>SeÃ§imini yap: TaÅŸ mÄ±, KaÄŸÄ±t mÄ±, Makas mÄ±?</p>
                    <button class="btn tkm-secim" data-secim="TaÅŸ">TaÅŸ</button>
                    <button class="btn tkm-secim" data-secim="KaÄŸÄ±t">KaÄŸÄ±t</button>
                    <button class="btn tkm-secim" data-secim="Makas">Makas</button>
                    <p id="tkmSonuc"></p>
                `;
                document.querySelectorAll('.tkm-secim').forEach(button => {
                    button.addEventListener('click', (e) => {
                        const oyuncuSecimi = e.target.dataset.secim;
                        const secenekler = ["TaÅŸ", "KaÄŸÄ±t", "Makas"];
                        const bilgisayarSecimi = secenekler[Math.floor(Math.random() * 3)];
                        const sonuc = document.getElementById('tkmSonuc');
                        let sonucText = `Senin seÃ§imin: <strong>${oyuncuSecimi}</strong>, BilgisayarÄ±n seÃ§imi: <strong>${bilgisayarSecimi}</strong>.<br>`;
                        if (oyuncuSecimi === bilgisayarSecimi) {
                            sonucText += "Berabere!";
                        } else if (
                            (oyuncuSecimi === "TaÅŸ" && bilgisayarSecimi === "Makas") ||
                            (oyuncuSecimi === "KaÄŸÄ±t" && bilgisayarSecimi === "TaÅŸ") ||
                            (oyuncuSecimi === "Makas" && bilgisayarSecimi === "KaÄŸÄ±t")
                        ) {
                            sonucText += "KazandÄ±n!";
                        } else {
                            sonucText += "Kaybettin!";
                        }
                        sonuc.innerHTML = sonucText;
                    });
                });
                break;

            case 'python-sifre-olusturucu':
                content.innerHTML = `
                    <p>KaÃ§ karakterli bir ÅŸifre istersin?</p>
                    <input type="number" id="sifreUzunluk" value="12" min="4" max="32">
                    <button id="sifreButton" class="btn">Åžifre OluÅŸtur</button>
                    <p id="sifreSonuc"></p>
                `;
                document.getElementById('sifreButton').addEventListener('click', () => {
                    const uzunluk = parseInt(document.getElementById('sifreUzunluk').value);
                    if (isNaN(uzunluk) || uzunluk < 4 || uzunluk > 32) {
                        document.getElementById('sifreSonuc').textContent = 'LÃ¼tfen 4 ile 32 arasÄ±nda bir uzunluk girin.';
                        return;
                    }
                    const karakterler = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#%&*?";
                    let sifre = '';
                    for (let i = 0; i < uzunluk; i++) {
                        sifre += karakterler.charAt(Math.floor(Math.random() * karakterler.length));
                    }
                    document.getElementById('sifreSonuc').textContent = `OluÅŸturulan Åžifre: ${sifre}`;
                });
                break;

            case 'html-karanlik-mod':
                content.innerHTML = `
                    <style>
                        #demo-karanlik-mod-body {
                            font-family: Arial, sans-serif;
                            transition: background 0.5s, color 0.5s;
                            background: #f0f0f0;
                            color: #333;
                            text-align: center;
                            padding-top: 20px;
                            min-height: 150px;
                            border-radius: 8px;
                            border: 1px solid #ccc;
                            margin-top: 20px;
                        }
                        #demo-karanlik-mod-body.dark {
                            background: #222;
                            color: white;
                        }
                        #demo-karanlik-mod-body label {
                            cursor: pointer;
                            font-size: 18px;
                            display: inline-flex;
                            align-items: center;
                            gap: 8px;
                        }
                        #demo-karanlik-mod-body input[type="checkbox"] {
                            width: 20px;
                            height: 20px;
                            accent-color: #4cafef;
                            transform: scale(1.2);
                            transition: transform 0.2s ease;
                        }
                        #demo-karanlik-mod-body input[type="checkbox"]:hover {
                            transform: scale(1.4);
                        }
                    </style>
                    <div id="demo-karanlik-mod-body">
                        <label>
                            <input type="checkbox" id="demoThemeCheckbox">
                            KaranlÄ±k Mod
                        </label>
                        <p>Bu bir Ã¶rnek iÃ§eriktir.</p>
                    </div>
                `;
                const demoCheckbox = content.querySelector("#demoThemeCheckbox");
                const demoBody = content.querySelector("#demo-karanlik-mod-body");
                if (demoCheckbox && demoBody) {
                    demoCheckbox.addEventListener("change", () => {
                        demoBody.classList.toggle("dark", demoCheckbox.checked);
                    });
                }
                break;

            case 'python-sifreli-liste-yoneticisi':
                let demoListeSifre = '1234'; // Basit bir demo ÅŸifresi
                let demoListe = [];
                content.innerHTML = `
                    <p>Demo ÅŸifresi: <strong>${demoListeSifre}</strong></p>
                    <input type="password" id="sifreGirisInput" placeholder="Åžifreyi Girin">
                    <div id="yoneticiKontrolleri" style="display:none; margin-top:10px;">
                        <input type="text" id="ekleCikarInput" placeholder="Eleman Ekle/Ã‡Ä±kar">
                        <button id="ekleBtn" class="btn">Ekle</button>
                        <button id="cikarBtn" class="btn">Ã‡Ä±kar</button>
                        <button id="gosterBtn" class="btn">Listeyi GÃ¶ster</button>
                    </div>
                    <p id="listeSonuc"></p>
                `;

                const sifreGirisInput = document.getElementById('sifreGirisInput');
                const yoneticiKontrolleri = document.getElementById('yoneticiKontrolleri');
                const ekleCikarInput = document.getElementById('ekleCikarInput');
                const ekleBtn = document.getElementById('ekleBtn');
                const cikarBtn = document.getElementById('cikarBtn');
                const gosterBtn = document.getElementById('gosterBtn');
                const listeSonuc = document.getElementById('listeSonuc');

                if (sifreGirisInput && yoneticiKontrolleri && ekleCikarInput && ekleBtn && cikarBtn && gosterBtn && listeSonuc) {
                    sifreGirisInput.addEventListener('input', () => {
                        if (sifreGirisInput.value === demoListeSifre) {
                            yoneticiKontrolleri.style.display = 'block';
                            listeSonuc.textContent = "GiriÅŸ baÅŸarÄ±lÄ±!";
                        } else {
                            yoneticiKontrolleri.style.display = 'none';
                            listeSonuc.textContent = "YanlÄ±ÅŸ ÅŸifre!";
                        }
                    });

                    ekleBtn.addEventListener('click', () => {
                        const eleman = ekleCikarInput.value.trim();
                        if (eleman) {
                            demoListe.push(eleman);
                            listeSonuc.textContent = `'${eleman}' listeye eklendi.`;
                            ekleCikarInput.value = '';
                        } else {
                            listeSonuc.textContent = 'LÃ¼tfen bir eleman girin.';
                        }
                    });

                    cikarBtn.addEventListener('click', () => {
                        const eleman = ekleCikarInput.value.trim();
                        const index = demoListe.indexOf(eleman);
                        if (index > -1) {
                            demoListe.splice(index, 1);
                            listeSonuc.textContent = `'${eleman}' listeden Ã§Ä±karÄ±ldÄ±.`;
                            ekleCikarInput.value = '';
                        } else {
                            listeSonuc.textContent = `'${eleman}' listede bulunamadÄ±.`;
                        }
                    });

                    gosterBtn.addEventListener('click', () => {
                        if (demoListe.length > 0) {
                            listeSonuc.textContent = `Liste: ${demoListe.join(', ')}`;
                        } else {
                            listeSonuc.textContent = 'Liste boÅŸ.';
                        }
                    });
                }
                break;

            case 'python-gelistirilmis-hesap-makinesi':
                content.innerHTML = `
                    <input type="number" id="sayi1" placeholder="SayÄ± 1">
                    <input type="number" id="sayi2" placeholder="SayÄ± 2 (FaktÃ¶riyel/KarekÃ¶k hariÃ§)">
                    <select id="islemSecimi">
                        <option value="toplama">Toplama (+)</option>
                        <option value="cikarma">Ã‡Ä±karma (-)</option>
                        <option value="carpma">Ã‡arpma (*)</option>
                        <option value="bolme">BÃ¶lme (/)</option>
                        <option value="us_alma">Ãœs Alma (^)</option>
                        <option value="faktoriyel">FaktÃ¶riyel (!)</option>
                        <option value="karekok">KarekÃ¶k (âˆš)</option>
                    </select>
                    <button id="hesaplaBtn" class="btn">Hesapla</button>
                    <p id="hesapSonuc"></p>
                `;

                const sayi1Input = document.getElementById('sayi1');
                const sayi2Input = document.getElementById('sayi2');
                const islemSecimi = document.getElementById('islemSecimi');
                const hesaplaBtn = document.getElementById('hesaplaBtn');
                const hesapSonuc = document.getElementById('hesapSonuc');

                if (sayi1Input && sayi2Input && islemSecimi && hesaplaBtn && hesapSonuc) {
                    hesaplaBtn.addEventListener('click', () => {
                        const s1 = parseFloat(sayi1Input.value);
                        const s2 = parseFloat(sayi2Input.value);
                        const islem = islemSecimi.value;
                        let sonuc;

                        if (isNaN(s1) && islem !== "faktoriyel" && islem !== "karekok") {
                            hesapSonuc.textContent = "LÃ¼tfen ilk sayÄ±yÄ± girin.";
                            return;
                        }

                        // SayÄ± 2'nin sadece gerekli iÅŸlemlerde kontrolÃ¼
                        if (isNaN(s2) && ['toplama', 'cikarma', 'carpma', 'bolme', 'us_alma'].includes(islem)) {
                            hesapSonuc.textContent = "LÃ¼tfen ikinci sayÄ±yÄ± girin.";
                            return;
                        }

                        switch (islem) {
                            case 'toplama':
                                sonuc = s1 + s2;
                                break;
                            case 'cikarma':
                                sonuc = s1 - s2;
                                break;
                            case 'carpma':
                                sonuc = s1 * s2;
                                break;
                            case 'bolme':
                                if (s2 === 0) {
                                    hesapSonuc.textContent = "SÄ±fÄ±ra bÃ¶lme hatasÄ±!";
                                    return;
                                }
                                sonuc = s1 / s2;
                                break;
                            case 'us_alma':
                                sonuc = Math.pow(s1, s2);
                                break;
                            case 'faktoriyel':
                                if (isNaN(s1) || s1 < 0 || s1 % 1 !== 0) {
                                    hesapSonuc.textContent = "FaktÃ¶riyel iÃ§in pozitif tam sayÄ± girin.";
                                    return;
                                }
                                let fact = 1;
                                for (let i = 2; i <= s1; i++) {
                                    fact *= i;
                                }
                                sonuc = fact;
                                break;
                            case 'karekok':
                                if (isNaN(s1) || s1 < 0) {
                                    hesapSonuc.textContent = "KarekÃ¶k iÃ§in pozitif sayÄ± girin.";
                                    return;
                                }
                                sonuc = Math.sqrt(s1);
                                break;
                            default:
                                sonuc = "GeÃ§ersiz iÅŸlem";
                        }
                        hesapSonuc.textContent = `SonuÃ§: ${sonuc}`;
                    });
                }
                break;

            case 'python-turtle-kalp':
                 content.innerHTML = `
                    <p>Bu demo, Python Turtle kÃ¼tÃ¼phanesini taklit eder ve tarayÄ±cÄ±da bir kalp Ã§izer.</p>
                    <canvas id="kalpCanvas" width="300" height="200" style="border:1px solid #d3d3d3; background-color: #f9f9f9;"></canvas>
                    <button id="kalpCizBtn" class="btn" style="margin-top: 10px;">Kalp Ã‡iz</button>
                 `;
                 const kalpCanvas = document.getElementById('kalpCanvas');
                 const kalpCizBtn = document.getElementById('kalpCizBtn');

                 if (kalpCanvas && kalpCizBtn) {
                     const ctx = kalpCanvas.getContext('2d');
                     kalpCizBtn.addEventListener('click', () => {
                        ctx.clearRect(0, 0, kalpCanvas.width, kalpCanvas.height); // KanvasÄ± temizle
                        ctx.strokeStyle = 'red';
                        ctx.fillStyle = 'red';
                        ctx.lineWidth = 3;

                        // KanvasÄ±n ortasÄ±nÄ± orijin yapalÄ±m ve Y eksenini ters Ã§evirelim (Turtle gibi)
                        ctx.save(); // Mevcut durumu kaydet
                        ctx.translate(kalpCanvas.width / 2, kalpCanvas.height / 2 + 50); // Ortaya yakÄ±n bir yere taÅŸÄ±
                        ctx.scale(1, -1); // Y eksenini ters Ã§evir

                        ctx.beginPath();
                        ctx.moveTo(0, 0); // BaÅŸlangÄ±Ã§ noktasÄ±
                        ctx.rotate(Math.PI / 180 * 50); // left(50)
                        ctx.lineTo(0, 133); // forward(133)

                        // Ä°lk yay (circle(50, 200) simÃ¼lasyonu)
                        // ctx.arc(x, y, radius, startAngle, endAngle, counterclockwise)
                        // Turtle'Ä±n soluna doÄŸru (yeni koordinat sisteminde yukarÄ±ya doÄŸru)
                        ctx.arc(-50, 133, 50, Math.PI / 2, Math.PI * 1.5, true); // Sol Ã¼st Ã§eyrekten baÅŸlayÄ±p aÅŸaÄŸÄ±ya doÄŸru

                        ctx.rotate(Math.PI / 180 * -140); // right(140)

                        // Ä°kinci yay (diÄŸer taraf)
                        ctx.arc(50, 133, 50, Math.PI * 1.5, Math.PI / 2, true); // SaÄŸ alt Ã§eyrekten baÅŸlayÄ±p yukarÄ±ya doÄŸru

                        ctx.closePath();
                        ctx.fill();
                        ctx.stroke();

                        ctx.restore(); // KanvasÄ± eski durumuna dÃ¶ndÃ¼r
                     });
                 }
                 break;

            // Buraya diÄŸer demo idâ€™lerini JS ile ekleyebilirsin
        }

        demoModal.style.display = 'block';
    }

    verileriYukle();
});


